services:
  # --- Zookeeper ---
  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  # --- Kafka ---
  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  # --- MongoDB ---
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: telecomx-provisioning
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  # --- Provisioning Service (Go) ---
  provisioning-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: provisioning-service
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - MONGODB_URI=mongodb://mongo:27017/telecomx-provisioning
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=customers
      - KAFKA_GROUP_ID=telecomx-provisioning-consumer
      - KAFKA_CLIENT_ID=telecomx-provisioning-service
    depends_on:
      - kafka
      - mongo

volumes:
  mongo_data:
